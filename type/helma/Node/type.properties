_db = main
_table = nodes

_id = id
_prototype = prototype
_parent = parent

name = name
visible = visible
position = position

parent = object(Node)
parent.local = parent_id
parent.foreign = id

creator = object(User)
creator.local = creator_id
creator.foreign = id

creationDate = creation_date

modifier = object(User)
modifier.local = modifier_id
modifier.foreign = id

modificationDate = modification_Date

_children = collection(Node)
_children.accessname = name
_children.local = id
_children.foreign = parent_id
_children.order = position ASC
_children.filter = visible = 1

all = collection(Node)
all.accessname = name
all.local = id
all.foreign = parent_id
all.order = position ASC

resources = collection(Resource)
resources.local = id
resources.foreign = node_id
resources.accessname = name
resources.order = position ASC
resources.filter = visible = 1

allResources = collection(Resource)
allResources.local = id
allResources.foreign = node_id
allResources.accessname = name
allResources.order = position ASC

# A list of related nodes
relatedNodes = collection(Node)
relatedNodes.filter = id IN (${related_ids})
relatedIds = related_ids

# List all nodes that link to this node.
relatingNodes = collection(Node)
relatingNodes.filter.additionalTables = nodes AS self
relatingNodes.filter = self.id = ${id} AND FIND_IN_SET(self.id, nodes.related_ids)